package edu.ucla.wise.client;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import edu.ucla.wise.commons.Interviewer;
import edu.ucla.wise.commons.Surveyor_Application;
import edu.ucla.wise.commons.User;
import edu.ucla.wise.commons.WISE_Application;


/*
 Set up session for user to begin completing survey 
*/

public class setup_survey extends HttpServlet
{
	static final long serialVersionUID = 1000;
	public void service(HttpServletRequest req, HttpServletResponse res)
       throws ServletException, IOException
	{
        // prepare for writing
        PrintWriter out;
        res.setContentType("text/html");
        out = res.getWriter();
        String initErr = Surveyor_Application.check_init(req.getContextPath());
        HttpSession session = req.getSession(true);
        
        if(initErr != null)
        {
            out.println("<HTML><HEAD><TITLE>WISE survey system -- Can't identify you</TITLE>"
            		+ "<LINK href='"+ Surveyor_Application.shared_file_url + "style.css' type=text/css rel=stylesheet>"
            		+ "<body><center><table>"
            		//+ "<body text=#000000 bgColor=#ffffcc><center><table>"
            		+ "<tr><td>Sorry, the WISE Surveyor application failed to initialize. " +
            				"Please contact the system administrator with the following information." +
            				"<P>"+ initErr +"</td></tr>"
            		+ "</table></center></body></html>");
            WISE_Application.log_error("WISE Surveyor Init Error: "+initErr, null);//should write to file if no email
            return;
        }

        //if session is new, then it must have expired since begin; show the session expired info
        if (session.isNew())
        {
            res.sendRedirect(Surveyor_Application.shared_file_url + "error" + Surveyor_Application.html_ext);
            return;
        }

        //get the interviewer if it exists (set by interview_login)
        Interviewer inv = (Interviewer) session.getAttribute("INTERVIEWER");
        
        //get the user from session
        User theUser = (User) session.getAttribute("USER");      
        if(theUser == null || theUser.id == null) //latter signals an improperly-initialized User
        {
          out.println("<p>Error: Can't find the user info.</p>");
          return;
        }

        if (theUser.completed_survey()) //triage should prevent this but in case it fails, bail out to "thanks" page
            res.sendRedirect(Surveyor_Application.shared_file_url + "thank_you");

        //Initialize survey session, passing the browser information
        String browser_info = req.getHeader("user-agent");        
        theUser.start_survey_session(browser_info);
        //check if it is an interview process
        if(inv!=null)
        {
            //start the interview session
            inv.begin_session(theUser.user_session);
        }
              
        //display the current survey page
        out.println("<html>");
        out.println("<head><script LANGUAGE='JavaScript1.1'>top.mainFrame.instruct.location.reload();</script></head>");
        //if( (WISE_Application.retrieveAppInstance(session).servlet_url != null) || (theUser.currentPage != null))
        if( (theUser.currentPage != null))
            out.println("<body ONLOAD=\"self.location = '" + Surveyor_Application.servlet_url + "view_form?p="+theUser.currentPage.id+"';\">&nbsp;</body>");
        else
            out.println("<body> Setup Survey Failure! </body>");
        out.println("</html>");

        out.close();
	}
}

